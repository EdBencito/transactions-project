spring.application.name=transaction-service

# PostgreSQL connection configuration
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USERNAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Spring port config
server.port=8082
management.server.port=9082

# Kafka Broker address
spring.kafka.bootstrap-servers=localhost:29092

# Kafka Schema Registry config (for Avro)
spring.kafka.properties.schema.registry.url=http://localhost:8085

# Kafka Producer config
app.kafka.topic.transaction-service=transaction.initiated
app.kafka.topic.transaction-service-update=balance.update
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer


# Kafka Consumer config
app.kafka.topic.transaction-processor-service=transaction.processed
app.kafka.topic.fraud-detection-service=transaction.flagged
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.specific.avro.reader=true

# Swagger docs & OpenAPI configurations
#springdoc.api-docs.enabled=true
#springdoc.swagger-ui.enabled=true